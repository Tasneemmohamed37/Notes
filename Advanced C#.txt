
--------------------------------- [ Day 1 ] --------------------
- out keyword => use to pass value by ref & compiler will not reject if not initialize it 

----------------------------- [ Day 2 ] -------------------

- Enum "enumuration" => list of const vars [ int - long - shourt ]
					 => value type
					 => can 'or' enum values like colors ex , but must curfull when assigine values ,refer to use '2, 4, 8, 16, 32....' 

- Stack include => local vars and parameters
				
- Heap include => objs with all vars inside it


----------------------------- [ Day 3 ] ------------------

- sealed class => cant inherite from it , so cant use virtual functions inside it 

- sealed override functions => breack override serise بمعني محدش بعدي يعمل اوفرريد

- object class functions => toString => get namespace.class_name 
						 => Equals
						 => getType -> used in reflection "in run time has obj want to know info about it"
						 => getHashCode -> code generate based on obj data used specefic algo
						 
						 
- Array => always ref type 
		=> 2D arr.length == 1D.lenth*2D.length
		=> arr.getLength(0) -> 1D.length == rows 
		=> jagged array -> array of arrayes
		=> once created never change size 
		
- string => is ref type but when passing it to function as a parameter , after execute function , it will never change [emutable data type]
		 => but if passing it and add 'ref' keyword before parameter ,  after execute function , it will change by create new obj so refere to use stringBuilder
		 

--------------------------------- [ Day 4 ] --------------------------

- operator overloading -> must be static functions 

- generics => بنأخر تعريف الداتا تايب اللي احنا بنشتغل عليه لغاية ما نستخدم الكلاس 
		   => <T> where T : class 
		   => <T> where T : new () -> if you want to create obj in generic class can use it to make sure that all classes must contain parameter less ctor 
		   
- indexer => special type of prop has square pracetes to pass parameter , and has no name only write 'this' keyword

------------------------------------ [ Day 5 ] ------------------------

-