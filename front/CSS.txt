------------------------------- [ Session 01] -------------------------------------------------------

- style -> inline
		-> internal [inside head tag]
		-> external [inside head tag add link tag]
		
		
- role set -> selector 			[h1]
		   -> declaration block [{}]
		   -> propertiy 		[color]
		   -> value 			[red]
		
- priority => inline 
			  [internal & external are the same but depend which write at last]
			  id_name  
			  class_name  
			  tag_name



- select elements in css -> * universal
						 -> tag_name
						 -> .class_name
						 -> #id_name
						 
- H2 .class => space mean inside this element 
- H2.class => without space mean element it self

- space -> inside the first selector
- without space -> the same selector 

- don`t use fixed hight to avoid over flow  => prefer to use minimum hight so on case of no content the div still appear 
- width don`t use pixel prefer use precentage

- cicle => width == hight & redius = 50%

 

- Inline style pros => fast / reduce number of requests

- Inline style cons => waste time/ repeat code /limited  cant use Pseudo 

- To give two classes for same element - > class = "1 2"

- Class, id name case sensitave 

- Specificity => (Id, class, element) 

-Cascade تتابع  => In case of same specifity, Last Selector overwritte and work




------------------------------------- [ Session 02 ] ---------------------------------------------

- box model => contain [width , hight > pading > border > margin]

- width Auto => based on the element display type
- width Fit Contenet => على قد المحتوي

- propertiy-block => display this propertiy on top & button
- propertiy-inline => display this propertiy on right & left

- margin can take negative value but pading can`t

- margin-left : auto  => take all space from left so make div at right

- ceneter div horizental افقي => margin-left : auto , margin-right : auto === margin-inline : auto
							  =>
							  =>

- margin collapsing => The top and bottom margins of blocks are sometimes combined (collapsed) into a single margin whose size is the largest of the individual margins
					   problem happen when 1. two elements  Adjacent siblings
										   2. No content separating parent and descendants.
										   
					=> solve it seperate them using 1. content
													2. border transparent شفاف
													3. pading-top 
													4. parent overflow: auto     **best practice**

- problem => element's border and padding are added to the element's specified width/height
  solve   => *{box-sizing : border-box} , back-ground clip : content-box


- html elements => inline -> a - span
				=> block  -> h - p - div  [good in : can give width , hight , pading ,margin]
				=> inline-block -> button
				=> replaced element "empty tags + iframe"-> img - input
				=> non-replaced element -> a - p - h - div - span - button
				=> inline replaced => img - iframe [can give width hight]

- best practice not give hight only one can give hight => first section "home" with minimum-hight



----------------[ to make elements inside each other ]

	1- inline-block prob => take white space so must`nt use total width "100%" --solve--> write div like that </div><div>

	2- float prob => rest of elements also floated     --solve--> seperate with div clear:both  [must after floated elements direct no after thiere parent]
				  => over flow parent hiegt equal zero --solve by BFC--> parent overflow :auto  
													   --solve by BFC--> give parent display: flow-root         **best practice


- text decoration :   text-decoration: line-through => we can use it for sale price

- font family => use 3 options in case of any one not found in server but refer to istall the used font 

- back-ground img => size : cover && position : ceneter ceneter

-- search -> back-ground size : cover Vs contain



------------------------------------- [ Session 03 ] ---------------------------------------------

----------- [ color ]

-rgb( , ,) => function take color amount as a parameter ( 0 : 255 || peresentage % )
-rgba( , , ,) => 'a' for alpa [0 : 1] نسبه الشفافية
- white (255,255,255) , black (0,0,0) , gray(x,x,x) x represent same number

- back-ground attatchment => fixed لما اجي اعمل سكرول الصورة ثابته في البيرنت بتاعها 


---------------- [ position ]

- defualt static 

- طيب ليه منستخدمش مارجن ونحرك العنصر؟ لان المارجن علي المسافات الفاضية بس وكمان ميقدرش يطلع برا البيرنت بتاعة

- position relative => يتحرك بالنسبة لمكانه الاصلي
					=> محافظ علي الفلو بتاعه بمعني لما بيتحرك محدش بيجي مكانة


- position abslute => width by defualt fit content [can give width 100% || left:0 ; right:0 ]
				   => بيسيب مكانه وبيطير
				   => بيتحرك بالنسبة لاقرب بيرنت له واخد بوزيشن غير الاستاتيك ولو ملقاش يتحرك بناء علي الفيو بورت
				   => if ele take custmized width -> top VS button -> top 
												  -> left VS right -> depend on page dirction or lang 'left if en' 
				   => else -> الدفاية فرشت والاربعه بيتطبقو وبياخد مساحة البيرنت بتاعة كامله 


- position fixed => width by defualt fit content [can give width 100% || left:0 ; right:0 ]
				 => بيسيب مكانة وبيطير
				 => في كل الاحوال يتحرك بالنسبة للفيو بورت 
				 
- position stiky => mix between abslute & fixed 
				 => يتحرك بالنسبة للفيو بورت لكن اول ما السكرول يجي عندة يثبت 
				 


- margin -> بحط سبيس حوالين العنصر
- position '3D' -> بحرك العنصر نفسة 
- float '2D' -> بجيب العناصر جمب بعض

------------------------- [ z index ]

- z index => controll order of element`s layers take attribute position "اعلي عنصر هو اللي يظهر الاول"
		  => defualt value auto -> like zero but not cause stack context "يظهرو علي حسب ترتيبهم "
		  => ممكن تكون بالسالب كداهينزل تحت الفيو بورت 

------------------------- [ Pseudo ]

- Pseudo element::  => عنصر مش حقيقي  use to Style part of element, can do same result with span and style it
					=> used with opening closing tag or nested tag "p ✔ | input ❌"
					=> by defualt display inline
					=> first line , first letter -> work only with elements display block
					=> befor , after -> must contain attribute content and can make it dynamic using attribute [content : attr(name)]
									 -> will be element childs 
					=> selection -> only work with attributes 'color , background-color , outline , cursor'
 
- Pseudo class: => style all element but in specific mood, like hover


------------------------- [ transition ]

- transition : duration => detect time to transition -> لو ضفته للعنصر نفسة يبقي وانا داخل بس
													 -> لو ضيفته للبيرنت يبقي وانا داخل ووانا خارج
													 
- transition timing function -> linear  سرعه ثابته
							 -> ease-in بطئ وبعدين يسرع 
							 -> ease-out سريع وبعدين يبطأ
							 -> ease 'defualt'
							 -> cubic bezier : custmiz timing function 


---------------------------- [ notes ]
- Image Sprites =>  reduce the number of server requests and save bandwidth can do this using back-ground position 


- search -> image maps??
		 -> back-ground linear-grider??



------------------------------------- [ Session 04 ] ---------------------------------------------

--------------- [overflow ]

- $overflow : hidden -> used when hover image make it larger and hide overflow

- $overflow : auto -> solve float problem [insted of din with classs clear fix]
				   -> solve it becouse it cause block formating context BFC [بتحاوط العناصر اللي عامله فلوت ببلوك وكدا تكون بتمنع العدوي]
				

-------------- [ transform ]

- $transform : rotate(degree) => rotate element with specific degree -> + مع عقارب الساعة
																	 -> - عكس عقارب الساعة 

- $transform-origin : top left 

- $transform : scale(2) -> تكبر بمعدل الضعف
						-> بنستخدمها مع الصورة لما بنعمل هوفر تكبر والاوفر فلو بيكون هيدن
						
-$transform : translate(px , px) -> ميزتها لو اخدت نسبة مئوية هيحسب النسبة دي من العرض

- $transform-skew : انحراف

--------------- [ hide element]

- hide element => parent display none [مبتحجزش مكانها]
			   => visibility hidden [حاجزه مكانها ] -> used in form validation
			   => opacity 0 [can interact with element] [اقدر اعمل عليها transition]
			   
--------------- [ font properties ]
- add font family -> font awesome select font and copy link then add it in html file befor close head tag

-- to make element in center compare to parent -> left : 50% [يبدأ من نص العنصر بالظبط ] && transform : translate-x (-50%) [يتحرك في المحور اكس بالسالب مقدار نص عرضة]


------------------------------------------------------------ [ Session 5 ] --------------------------------------------------------

---------- [ Revision ]

- .container>.item.item-$*6 => will make div with class container and insid it 6 divs with class"item item-1:6"

- most of website start as navbar , to do this use container div for all sections [width: 85% , margin-inline : auto]

- incase want p come in specific word and ttake new line -> br
														 -> max-width
														 
- box-shadow -> can adjast it from inspect from two cubics 

- by defualt there is white space below inline element "like img" --solve--> display : block

- ancor not inherit color from parent --solve--> color: inherit 


---------- [ flexbox ]

- flexbox 1D layout -> بستخدمة عشان اجيب العناصر تحت بعض او جمب بعض 
					-> بقدر اعمل بيه حاجات مبعرفش اعملها بال فلوت 
					زي اني اسنتر العنصر بالطول 
					او اخلي العناصر اللي في نفس الصف العرض يتقسم عليهم بالتساوي

- parent display: flex 

- Definitions  => flex container -> parent
			   => flex items -> childs
			   => main axis -> horizental line  العناصر بتترص علي حذاه
			   => cross axis -> virtical line | 
			   => main size -> flex item width "defualt" or height "in case switch two axises"
			   => cross size -> flex item height "defualt" or width "in case of switch two axises"
			   => start main -> left if page direction 'ltr'
			   => end main -> right if page direction 'ltr'
			   

-------- [ Parent Properties]
- flex-direction => change main axis direction
				 => by defualt row -> main axis horizental and if direction 'ltr' start main will be left 
				 => row-reverse -> main axis horizental and start main will be right
				 => column -> main axis virtical | and start top 
				 => column-reverse -> main axis vertical | and start bottom 

- flex-wrap => by defualt 'no wrap' -> all flex items be same row even if they take custmized width 
			=> wrap -> يحط العناصر جمب بعض واول ما الايتميز تقفل عرض 100% ينزل سطر جديد
			=> wrap-reverse ->  هيطلع سطر جديد 
			
- flex-flow => defualt 'row no wrap' -> shourt hand for flex direction and wrap  

- align-items => تحدد مكان البيرنت علي الكروس اكسيس 
			  => use when have only one line of items
			  => defualt 'stretch' -> full cross axis
			  => flex-start -> start cross 
			  => flex-end 
			  => flex-center 


- align-content => تحدد مكان البيرنت علي الكروس اكسيس 
				=> use it when use flex-wrap and have multiple lines of items  
				=> defualt 'normal'
				=> space between
				=> space arround
				=> space evenly

- justify-content => تحرك البيرنت علي المين اكسيس
				  => defualt 'flex-start'
				  => flex-end
				  => flex-ceneter
				  => space between
				  => space arround -> 1 [] 1 1 [] 1
				  => space evenly -> 1 [] 1 [] 1    قسمة العدل 


- gap => شبه المارجن كدا بتبقي مسافه من كل نواحي العنصر وبتكون قسمة العدل
	  => shourt hand prop for [column-gap & row-gap]


----------------- [ child properties ]

- order => by defualt 'zero' -> display order depend on html order
		=> بيرتب العناصر من اصغر رقم الي اكبر رقم 
	
- align-self => تحدد مكان ال التشايلد دا علي الكروس اكسيس
			 => flex-start -> start cross 
			 => flex-end 
			 => flex-center 
	  
- flex-grow =>  تحدد النسبة اللي الاسبيس الزيادة تتوزع بيها علي المين اكسيس
			=> 1 -> معناه خد كل الاسبيس الزيادة واديهم للعنصر دا 
			=> defualt 'zero' -> العنصر ياخد العرض بالغة فقططط
			

- flex-shrink => defualt '1'
			  => النسبه اللي هيصغر بيها العنصر في حالة ان البيرنت ميكفيش انه ياخد الويدث الاصلي بتاعة
			  

- flex-basis (px) => item main size 

- flex => shourt hand prob for [ grow - shrink - basis ]


*** NOTE!! => to center div vertical and horizental [ justify-content : flex-center && align-items : flex-center]
		   => props start with 'align' keyword work on cross access
		   
		   

---------------------------------------------------------------- [ Session 6 ] ---------------------------------

---------- [ responsive web design 'RWD' ]

- Media query => like condition 
			  => @ media and take 2 parameter -> media type [screen , print]
											  -> media feature [min-width , max-width]
											  

- breakpoint -> النقطة اللي بتغير عندها شكل الديزاين
			 -> 0 : 576 -> Xsmall phone
			 -> 576 : 768 -> small 
			 
- recommended to use min-width but order it from smaller to larger to avoid uncorrect overwrite  && make media file last file linked

- html from desktop / css mobile first []
